{"version":3,"sources":["dialog-demo/dialog-demo.tsx","dialog-demo/routing.tsx"],"names":["Dialog1","close","onSave","metas","initialValue","React","useState","isValidate","setIsValidate","useForm","form","checkFormValidate","validate","getFieldsError","filter","it","errors","length","useEffect","initializeValue","onChange","values","htmlType","onClick","getFieldsValue","disabled","FormsArray","value","name","age","gender","email","fieldType","options$","Promise","resolve","rules","type","label","city","visited","modes","Demo1","val","setVal","mode","setMode","className","JSON","stringify","style","margin","marginBottom","htmlFor","marginRight","fontWeight","Group","id","map","e","onSelectMode","DialogService","openComponent","content","pre","item","index","findIndex","destory","closable","dependedElement","currentTarget","undefined","DialogDemo","DialogRoute","path"],"mappings":"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","file":"static/js/9.e9954df3.chunk.js","sourcesContent":["import { Button, Radio } from 'antd';\r\nimport { useForm } from 'antd/lib/form/Form';\r\nimport React from 'react';\r\nimport { MetaConfig } from '../mylib/components/flex-form/interface';\r\nimport FlexForm from '../mylib/components/flex-form/flex-form.component';\r\nimport { DialogService } from '../mylib/components/dynamic-dialog';\r\n\r\n\r\ninterface CloseDialog{\r\n    close:()=>void;\r\n    onSave:(val:any)=>void;\r\n    initialValue:any;\r\n    metas:MetaConfig[];\r\n}\r\n\r\nconst defaultValue={\r\n    name:'张三',\r\n    age:23,\r\n    gender:'female',\r\n    email:'zhangsan@test.com'\r\n}\r\n\r\nconst defaultvalue2={\r\n    city:'Nanjing',\r\n    visited:true,\r\n}\r\n\r\nconst Dialog1:React.FC<CloseDialog>=({close,onSave,metas,initialValue})=>{    \r\n    const [isValidate,setIsValidate]=React.useState<boolean>(false);\r\n    const [form]=useForm();\r\n    const checkFormValidate=()=>{\r\n        const validate = form.getFieldsError().filter(it=>it.errors.length>0).length==0;\r\n        if(validate!=isValidate){\r\n            setIsValidate(validate);\r\n        }\r\n    }\r\n    const onSubmit=()=>{\r\n        const values = form.getFieldsValue();\r\n        onSave(values);\r\n    }\r\n    const onClose=()=>{\r\n        close();\r\n    }\r\n    React.useEffect(()=>{\r\n        checkFormValidate();\r\n    },[]);\r\n    return(\r\n        <div>\r\n            <h2>这是一个动态Form，试试改变下面的值</h2>\r\n            <FlexForm \r\n                form={form}\r\n                initializeValue={initialValue} \r\n                metas={metas} \r\n                onChange={values => checkFormValidate()}>\r\n\r\n            </FlexForm>\r\n            <div>\r\n                <Button htmlType='button' onClick={onClose}>Close</Button>\r\n                <Button htmlType='button' onClick={onSubmit} disabled={!isValidate}>Submit</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface FormDef{\r\n    value:any,\r\n    metas:MetaConfig[],\r\n    label:string,\r\n}\r\n\r\n\r\nconst FormsArray:FormDef[]=[\r\n    {\r\n        value:{\r\n            name:'张三',\r\n            age:23,\r\n            gender:'female',\r\n            email:'zhangsan@test.com'\r\n        },\r\n        metas:[\r\n            {\r\n                name:'gender',\r\n                fieldType:'select',\r\n                options$:Promise.resolve(['female','male','other'])\r\n            },\r\n            {\r\n                name:'email',\r\n                rules:[{type:'email'}]\r\n            }\r\n        ],\r\n        label:'表单1'\r\n    },\r\n    {\r\n        value:{\r\n            city:'南京',\r\n            visited:true,\r\n        },\r\n        metas:[\r\n            {\r\n                name:'city',\r\n                fieldType:'select',\r\n                options$:Promise.resolve(['北京','上海','广州','深圳','南京','苏州'])\r\n            },\r\n            {\r\n                name:'visited',\r\n                label:'是否去过',\r\n            }\r\n        ],\r\n        label:'表单2'\r\n    }\r\n];\r\nconst modes:string[]=['居中弹框','附近弹框'];\r\n\r\nconst Demo1:React.FC=()=>{\r\n    const [val,setVal]=React.useState<FormDef>(FormsArray[0]); \r\n    const [mode,setMode]=React.useState<string>('居中弹框');\r\n    const {value,metas}=val;\r\n    const openForm=(e:React.MouseEvent<HTMLElement>)=>{\r\n        const onSave=(val:any)=>{\r\n            setVal(pre=>{\r\n                let item = {...pre,value:val};\r\n                let index = FormsArray.findIndex(it=>it.label===item.label);\r\n                FormsArray[index]=item;\r\n                return item;\r\n            });\r\n            destory();\r\n        }\r\n        const onClose=()=>{\r\n            destory();\r\n        }\r\n        const {destory} = DialogService.openComponent({\r\n            content:<Dialog1 onSave={onSave} close={onClose} metas={metas} initialValue={value}/>,\r\n            closable:true,\r\n            dependedElement:mode==='附近弹框'?e.currentTarget:undefined,\r\n        });\r\n    }\r\n    const onSelectForm=(form:FormDef)=>{\r\n        setVal(form);\r\n    }\r\n    const onSelectMode=(mode:string)=>{\r\n        setMode(mode);\r\n    }\r\n    return (\r\n        <div className=\"each-example\">\r\n            <h2>演示函数调用的方式打开包含表单的弹框，表单则是由<b>动态表单</b>组件渲染</h2>\r\n            <p>我们用同一个组件渲染不同的表单,表单的内容由数据驱动</p>\r\n            <p>弹框可以居中弹框，也可以在某个Dom元素周围弹框</p>\r\n            <p>表单序列化后的值{JSON.stringify(value)}</p>\r\n            <div style={{margin:'100px 0 100px 100px'}}>\r\n                <div style={{marginBottom:'20px'}} key='0'>\r\n                    <label htmlFor=\"mode\" style={{marginRight:'20px',fontWeight:600}}>选择弹框的位置</label>\r\n                    <Radio.Group id='mode' value={mode}>\r\n                        {modes.map(it=><Radio key={it} value={it} onClick={e=>onSelectMode(it)}>{it}</Radio>)}\r\n                    </Radio.Group>\r\n                </div>\r\n                <div style={{marginBottom:'20px'}} key='1'>\r\n                    <label htmlFor=\"formopt\" style={{marginRight:'20px',fontWeight:600}}>选择要打开的表单</label>\r\n                    <Radio.Group id='formopt' value={val}>\r\n                        {FormsArray.map(it=><Radio key={it.label} value={it} onClick={e=>onSelectForm(it)}>{it.label}</Radio>)}\r\n                    </Radio.Group>\r\n                </div>\r\n                <Button htmlType='button' onClick={openForm}>打开表单</Button>\r\n            </div>\r\n            <p>如下是代码调用示例,一行代码弹出你想弹的组件，没有额外的封装，适合于各种组件的组合</p>\r\n            <p>{`const openForm=()=>{\r\n        dialogRef.current = OpenComponent({\r\n            content:<DiaglogContent/>,\r\n        });\r\n\r\n    }`}</p>\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\n\r\nconst DialogDemo:React.FC =()=>{\r\n\r\n\r\n    return (\r\n        <>\r\n        <Demo1/>\r\n        </>\r\n    )\r\n}\r\nexport default DialogDemo","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport DialogDemo from './dialog-demo';\r\n\r\nconst DialogRoute:React.FC=()=>{\r\n    return (\r\n        <>\r\n        <Route path='/dialog/basic'><DialogDemo/></Route>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DialogRoute;"],"sourceRoot":""}